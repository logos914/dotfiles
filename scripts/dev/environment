#!/usr/bin/env bash

set -euo pipefail

source "$DOTFILES_PATH/scripts/core/_main.sh"

##? Development environment helpers
##?
##? Usage:
##?   environment install
##?   environment test
docs::parse "$@"

case $1 in
"install")

  if [ ! -d "$HOME/Develop" ]; then
    output::answer "Creating workspace folder"
    mkdir "$HOME/Develop" | log::file "Creating workspace"
		
		output::answer "Creating databases folder"
    mkdir "$HOME/Develop/Databases" | log::file "Creating Databases workspace"
		
		output::answer "Creating scripts folder"
    mkdir "$HOME/Develop/Scripts" | log::file "Creating Scripts workspace"
  fi

  if ! platform::command_exists sdk; then
    output::answer "Installing SDKMAN"
    dot package add zip | curl -s "https://get.sdkman.io" | bash | log::file "Installing SDKMAN"
  fi

  if ! platform::command_exists docker; then
    if platform::is_linux; then
      output::answer "üê≥ Installing Docker"

      bash <(curl -s https://get.docker.com/)

      if platform::command_exists docker; then
        output::write "‚úÖ Docker installed!"
      fi
   	else
      if platform::is_macos; then
			  output::error "Unsupported operating system 'macOS'"
      elif platform::is_wsl; then
			  output::error "We recommend using Docker Desktop for Windows."
		  fi
		  output::error "Please get Docker Desktop from https://www.docker.com/products/docker-desktop"
	  fi
  fi

  ;;
"test")
  if [ -d "$HOME/Develop" ]; then
    output::write "‚úÖ Workspace folder exists!"
  else
    output::write "‚ùå Workspace folder not exists!"
  fi

  if [ -d $SDKMAN_DIR ]; then
    output::write "‚úÖ SDKMAN installed!"
  else
    output::write "‚ùå SDKMAN not installed!"
  fi

  if platform::command_exists docker; then
    output::write "‚úÖ Docker installed!"
  else
    output::write "‚ùå Docker NOT installed!"
  fi

  ;;
*)
  exit 1
  ;;
esac
